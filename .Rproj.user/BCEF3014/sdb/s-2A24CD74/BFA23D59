{
    "contents" : "---\ntitle: \"Exam\"\nauthor: \"Sebastian Gregersen and Jeppe Korsgaard Kristensen\"\ndate: \"10th june 2016\"\noutput: html_document\n---\n```{r}\ninstall.packages(\"devtools\", repos = 'http://cran.us.r-project.org')\nlibrary(devtools)\ninstall_github(\"greger93/temp2\")\nlibrary(temp2)\n```\n\nÆndrer n i 2.3 og 2.4 a)\n\n## Task 1\n\n#### 1\n\nThe data is read from github. The data is grades compared to the amount og sports a person is doing.\n```{r}\nData <-read.table(\"https://raw.githubusercontent.com/haghish/ST516/master/data/sport.txt\")\n```\nThe correlation is found by \n```{r}\nCorr <- cor(Data[,1],Data[,2])\nCorr\n```\nThe correlation states that there is a decent relation between doing sports and getting better grades.\n\n#### 3\n\nPart 3 is made before part 2 since part 3 makes a function which is used to solve part 2.\nThe function is Bootstraptask1 in temp2\n\n#### 2\n\nThe function from task is used with 500 estimations and the data set loaded from github.\n```{r}\nBootstraptask1(500,Data$Sport,Data$Grades)\n```\nThe standard error is the mean of the difference between the 2 vectors. Since this is close to 0 it is a quite good standard error.\nBias is the difference between the estimated correlation and the exact correlation. The value is close to zero and therefore there is not a big difference between the estimated correlation and the exact correlation.\nThe confidence interval is found with a significance level of 95 %. Since the exact correlation is in the interval we can say with 95 % certainty that the estimated correlation is correct.\n\n#### 4\nWe dident want to include additional arguments.\n\n#### 5\n\nThe data is plottet and R's build-in function lm is used to create a linear model of the data set.\n```{r}\nplot(Data[,1],Data[,2], xlab = \"sport\", ylab = \"Grades\")\nabline(lm(Data[,2]~Data[,1]))\n```\n\nIt is clear that from this data set that a higher amount of sport would help you to get better grades.\n\n## Task 2\n\n#### 1\n\nMonte Carlo integration is used to solve the integral between 0 and pi.\n```{r}\nn <- 10000\nestimations <- c()\nfor(i in 1:n) {\n  x <- runif(1)\n  integral <- sin(pi*x)\n  estimations <- c(integral, estimations)\n}\nphit <- sum(estimations)/n\nse <- sd(estimations)/sqrt(n)\nprint(paste(\"Variance:\", var(estimations)))\nprint(paste(\"Standard deviation:\", sd(estimations)))\nprint(paste(\"Standard error:\", sd(estimations)/sqrt(n)))\nconfidence <- qnorm(1-(1-0.95)/2)\nprint(paste(\"Confidence interval:\",mean(estimations) + se*confidence))\nprint(paste(\"Confidence interval:\",mean(estimations) - se*confidence))\nprint(paste(\"Probability of hit:\", phit))\n```\n\nWith a distance of 1 between the parallel lines and a length of the needle equal to 1, there is approximate 67 % chance that a needle hits a parallel line.\n\n#### 2\n\nA function is made to calculate the estimated pi.\nThe function is called Buffontask2 in temp2.\n```{r}\nBuffontask2(10000,1 , 1)\nPhit <- 2*1/(Buffontask2(10000,1 , 1)*1)\nPhit\n```\n\nThe estimated probabiliy of hit from Buffons experiment is close to the estimated probability of hit from the Monte Carlo intergration\n\n#### 3\n\n```{r}\nestpi = c()\nestpi <- append(estpi,Buffontask2(1,1,1))\nestpi <- append(estpi,sapply(seq(10,100,10),function(N) Buffontask2(N,1,1)))\nplot(estpi,xlim = c(1,length(estpi)), ylim = c(min(estpi), max(estpi)))\nabline(a = pi, b = 0, col = 'green')\n```\n\nAccording to the strong law of large numbers it seems like the estimated\npi converges to pi as N increases.\n\n#### 4\n##### a)\n```{r}\ncount = 0\nn <- 100\nfor(i in 1:n){\n  c <- Buffontask2(3408,2.5,3)\n  if(round(c,digits = 6) == round(pi,digits = 6)){\n    count = count + 1\n  }\n}\n100*count/n\n```\n\nIt is therefore very unlikely that by 1 attempt you would estimate pi with 6 digits\n\n##### b)\n\nWith d  = 3 and l = 2.5 the value N = 3408 was a exellent choice for N however the chance that he would get 1808 hits is very unlikely and timeconsuming since from task 4 a) we see that the probability is often lower than 2 percent. We think it is obvious that he knew the fraction found by the chinese matematician, since he chose those values for N, l and d.\n\n## Task 3\n\n#### 1\n\nA function is made to calculate the probability that the chi-square distribution is larger than a given x. The function is called chiprobability in temp2\n\n#### 2\n\nA function is made to calculate chi-square goodness of fit value. The function is called Goodnessoffittask3 in temp2.\n\n#### 3\n\n??\n\n#### 4\n\nThe data is read from github. The second vector is the amount of cards collected for each of the soccer players. The third vector is the probability of getting a certain card.\n```{r}\nnData <-read.table(\"https://raw.githubusercontent.com/haghish/ST516/5e00636e072db393354d468da5d53a7b7bf5a8d8/data/soccer.txt\")\n```\nH0: the cards are uniformly distributed.\nH1: the cards are not uniformly distributed.\nSince it is stated that the cards are equally likely to get it is known that they are uniformly distributed.\n```{r}\ns <- sapply(1:20,function(x) 1/length(nData[,2]))\nT <- Goodnessoffittask3(nData[,2],s)\n1 - pchisq(T, length(nData[,2])-1)\n```\nIt is seen from the result that it is not significant. The cards are\ntherefore not uniformly distributed as it also can be seen on the following graph:\n\n```{r}\nplot(nData[,2], ylim = c(0,max(nData[,2])))\nabline(a = sum(nData[,2])*1/length(nData[,2]), b = 0, col = 'green')\n```\n\n#### 5\n\n```{r}\nchiprobability(T,19,100000)\n1 - pchisq(T, length(nData[,2])-1)\n```\nThere is a difference between the estimated p-value and the analytic p-value since there is a small chance that there are values larger than the T-value. If you created an infinite amount of numbers the 2 values would be equal.\n\n#### 6\n\n$$P(X^2 > x) = 1 - P(X^2 < x) = 1 - ecdf(x)$$\nBecause it is known that you can calculate the p-value from cumulative distribution function it is seen from the equation above that you also can calculate it from the chi square distribution.\nSince there is a large difference between the expected value and the actual value of each cards the Goodness of fit value will be very large and it is therefore very unlikely that the chi square distribution will be higher than that value and they are therefore not uniformly distributed.\n\n#### 7\n\nThere is calculated a Goodness \n```{r}\nT <- Goodnessoffittask3(nData[,2],nData[,3])\nT\nchiprobability(T, 19, 10000)\n```\nTherefore since the qchisq value is higher than 0.05 we can say with a significanslevel of 5 % that Gittes cards fits the expected distribution.\n\n## Task 4\n\n```{r}\nData <-read.table(\"https://raw.githubusercontent.com/haghish/ST516/master/data/height.txt\")\n#Matrixregression(Data[,4]~Data[,1]+Data[,2]+Data[,3]+Data[,5])\n```\n\n## Task 5\n\n```{r}\n#1+1\n#set.seed(1)\n#data <- rgamma(10000,1)\n#estdens(data, method=\"kernel\")\n```\n\n## Task 6\n\n```{r}\n1+1\n```\n\n\n## Task 7\n\n",
    "created" : 1465479705347.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "649942258",
    "id" : "BFA23D59",
    "lastKnownWriteTime" : 1465494675,
    "path" : "~/Anvendt matematik/ST522 Beregnmæssig statistik/Exam.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_markdown"
}